# Copyright 2024 IBM Corporation and others.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Workflow to build a Java project with Gradle
name: Gradle-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
    - name: Grant execute permission for gradlew and scripts
      run: chmod +x gradlew scripts/*
    - name: Check for correct copyright in changed files on pull requests
      if: github.event_name == 'pull_request'
      run: |
        git fetch --depth=1 origin ${{github.base_ref}}
        scripts/check-copyright.sh origin/${{github.base_ref}}
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload test reports
      uses: actions/upload-artifact@v3.1.0
      if: always()
      with:
        name: reports
        path: '*/build/reports'
    - name: Upload xml test results
      if: always()   # make sure we run it every time even if test step fails
      uses: actions/upload-artifact@v3.1.0
      with:
          name: xml-report
          path: "**/test-results/**/*.xml"
    - name: Check JAR licenses
      run: |
        JARS=$(find ./ -name '*.jar' -type f | grep yoko | grep libs)
        SHIPPED_JARS=("osgi" "util" "spec-corba" "rmi-spec" "rmi-impl" "core" "testify")
        for shippedJar in ${SHIPPED_JARS[@]}; do
            for jar in $JARS; do
                if [[ $(basename $jar) == *"$shippedJar"* ]]; then
                    echo "Checking $(basename $jar)"
                    if $(unzip -p $jar META-INF/MANIFEST.MF | grep -q "Bundle-License: https://www.apache.org/licenses/LICENSE-2.0.txt"); then
                        echo "License found"
                    else
                        echo "License not found"
                        exit 1
                    fi
                else
                    continue
                fi
            done
        done
