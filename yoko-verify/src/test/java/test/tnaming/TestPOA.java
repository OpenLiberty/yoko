/*
 * Copyright 2024 IBM Corporation and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package test.tnaming;

import static org.omg.CORBA.CompletionStatus.COMPLETED_NO;

import java.util.Hashtable;

import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.InvokeHandler;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.PortableServer.POA;
import org.omg.PortableServer.Servant;

/**
* TestPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from Test.idl
* Wednesday, July 5, 2006 12:46:25 PM EDT
*/


//
public abstract class TestPOA extends Servant implements TestOperations, InvokeHandler
{
  public OutputStream _invoke (String method, InputStream in, ResponseHandler rh)
  {
    OutputStream out = null;

    switch (method)
    {
       case "get_id":  // Test/get_id
         String result = this.get_id ();
         out = rh.createReply();
         out.write_string (result);
         break;

       case "shutdown":  // Test/shutdown
         this.shutdown ();
         out = rh.createReply();
         break;

       default:
         throw new BAD_OPERATION (0, COMPLETED_NO);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {"IDL:Test:1.0"};

  public String[] _all_interfaces (POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Test _this()
  {
    return TestHelper.narrow(
    super._this_object());
  }

  public Test _this(ORB orb)
  {
    return TestHelper.narrow(
    super._this_object(orb));
  }

} // class TestPOA
